{{- if .Values.epicsConfiguration.services.jupyter.name }}

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: "{{ .Values.beamline }}-{{ .Values.epicsConfiguration.services.jupyter.name }}"
  namespace: argocd
  labels:
    rootapp: {{ .Chart.Name }}
    rootappver: {{ .Chart.Version }}
    beamline: {{ .Values.beamline | quote }}
    revision: {{.Values.targetRevision}}
    service: {{.Values.epicsConfiguration.services.jupyter.name }}
spec:
  project: default
  source:
    repoURL: 'https://baltig.infn.it/epics-containers/jupyter-control-notebook-chart.git'
    path: .
    targetRevision: {{.Values.targetRevision}}
    helm:
      values: |
          beamline: {{ .Values.beamline | quote }}
          replicaCount: {{ .Values.consoleReplica }}
          serviceAccountName: {{.Values.serviceAccountName }}
          {{- if .Values.epicsConfiguration.services.jupyter.securityContext }}
          securityContext:
            {{- toYaml .Values.epicsConfiguration.services.jupyter.securityContext | nindent 12 }}
          {{- else }}
          securityContext:
            {{- if .Values.openshift }}
            privileged: true
            {{- end }}
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          {{- end}}
          epicsConfiguration:
            name: {{ .Values.epicsConfiguration.name | quote}}
            gateway: '{{- include "gateway-service" . }}' ## override with gateway
          {{- if .Values.epicsConfiguration.services.jupyter.dataVolume }}
          dataVolume:
              {{- toYaml .Values.epicsConfiguration.services.jupyter.dataVolume | nindent 12 }}
          {{- else }}
          dataVolume:
            claim:  ## an existing claim or empty will create a new one
            size: 21Gi ## size of the claim
            accessMode: ReadWriteOnce
          {{- end }}

          ingress:
            enabled: true
            className: {{.Values.ingressClassName}}

            hosts:
              - host: '{{- include "jupyter-url" . }}'
                paths:
                  - path: /
                    pathType: ImplementationSpecific
                    port: 80
          gitRepoConfig:
            {{- toYaml .Values.epicsConfiguration.services.jupyter.gitRepoConfig | nindent 12 }}
           
    
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: {{ .Values.namespace | quote }}
  syncPolicy:
    {{- toYaml .Values.syncPolicy | nindent 10 }}
{{- end }}