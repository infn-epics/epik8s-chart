{{- range .Values.epicsConfiguration.iocs }}
## IOC  {{.name | lower }}
{{- if or ( not .disable) ( eq .disable false) }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{$.Values.beamline}}-{{.name | lower}}-ioc
  {{- if $.Values.argocdNamespace }}
  namespace: {{ $.Values.argocdNamespace }}
  {{- else }}
  namespace: argocd
  {{- end }}
  labels:
    rootapp: {{ $.Chart.Name }}
    rootappver: {{ $.Chart.Version }}
    beamline: {{ $.Values.beamline | quote }}
    revision: {{$.Values.targetRevision}}
    iocname: {{.name | lower}}
    type: "ioc"
    {{- if .host }}
    iochost: {{.host}}
    {{- end }}
    {{- if .devtype }}
    devtype: {{.devtype}}
    {{- else }}
    devtype: "{{ .iocdir }}"
    {{- end }}
    {{- if .devgroup }}
    devgroup: "{{ .devgroup }}"
    {{- end }}
    {{- if .template }}
    template: "{{ .template }}"
    {{- end }}
    
spec:
  project: {{ $.Values.argocdProject | default "default" }}
  source:
    repoURL: {{.charturl}}
    path: .
    {{- if .targetRevision }}
    targetRevision: {{.targetRevision}}

    {{- else }}
    targetRevision: {{$.Values.targetRevision}}
    {{- end }}
    helm:
      releaseName: {{ .name | lower }}
      values: |
          {{- toYaml . | nindent 10 }}
          {{- if .nfsMounts }}
          nfsMounts:
          {{- toYaml .nfsMounts | nindent 10 }}
          {{- else }}
          {{- if $.Values.nfsMounts }}
          nfsMounts:
          {{- toYaml $.Values.nfsMounts | nindent 10 }}
          {{- end}}
          {{- end}}

          beamline: {{ $.Values.beamline | quote }}
          iocname: "{{ .name | lower }}"
          

          {{- if $.Values.baseIp }}
          staticIP: {{ include "allocateIpFromName" (dict "name" .name "namespace" $.Values.namespace "baseIp" $.Values.baseIp "startIp" $.Values.startIp) }}
          {{- end }}
          {{- if $.Values.epik8s_secrets}}
          epik8s_secrets: {{$.Values.epik8s_secrets}}
          {{- end }}
          http_proxy: {{ $.Values.http_proxy | quote }}
          https_proxy: {{ $.Values.https_proxy | quote }}
          no_proxy: {{ $.Values.no_proxy | quote }}
          {{- if .enable_ingress }}
          ingress:
            enabled: true
            {{- if $.Values.ingressClassName }}
            className: {{$.Values.ingressClassName}}
            {{- end }}
            hosts:
              - host: {{ printf "%s-%s.%s" $.Values.beamline (.name | lower) $.Values.epik8namespace }}
                paths:
                  - path: /
                    pathType: Prefix
          {{- end}}
          
          {{- if $.Values.epicsConfiguration.name }}
          epicsConfiguration:
            name: {{ $.Values.epicsConfiguration.name | quote}}
            {{- if .usegateway }}
            gateway: gateway.{{ $.Values.namespace }}.svc
            {{- end }}
          {{- end }}
          {{- if and (not $.Values.gitRepoConfig) (or .gitinit .gitpath .host)}}
          gitRepoConfig:
            url: {{$.Values.giturl}}
            {{- if .gitpath }}
            path: {{ .gitpath }}
            {{- else }}
            {{- if .iocdir }}
            path: config/iocs/{{.iocdir}}
            {{- else }}
            path: config/iocs/{{.name}}
            {{- end }}
            {{- end }}
            {{- if .gitrev }}
            branch: {{.gitrev}}
            {{- else }}
            branch: {{$.Values.gitrev}}
            {{- end }}
            {{- if .token }}
            token: {{.token}}
            {{- else }}
            token: {{$.Values.token}}
            {{- end }}
            {{- if .exec }}
            exec: {{.exec}}
            {{- end }} 
          {{- end }}
          {{- if not .resources }}
          {{- if eq .devtype  "development" }}
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 600m
              memory: 700Mi
          {{- else }}

          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 64Mi
          {{- end }}
          {{- end }}

          {{- if $.Values.serviceAccountName }}
          serviceAccount:
            create: false
            annotations: {}
            name: {{$.Values.serviceAccountName}}
          {{- end }}
          {{- if .host }}
          ssh:
            host: {{.host}}
            {{- if .ssh_options}}
            options: {{.ssh_options}}
            {{- end }}
            {{- if .user }}
            user: {{.user}}
            {{- else }}
            user: root
            {{- end }}
            {{- if .workdir }}
            workdir: {{.workdir}}
            {{- else }}
            workdir: "workdir-{{.name}}"
            {{- end }}
            {{- if .scpoptions }}
            scpoptions: {{.scpoptions}}
            {{- end }}
            {{- if .initcmd }}
            initcmd: {{.initcmd}}
            {{- end }}
          {{- end }}

    
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: {{ $.Values.namespace | quote }}
  {{- if .autosync }}
  syncPolicy:
    automated:
      prune: true  # Optional: Automatically remove resources not specified in Helm chart
      selfHeal: true
  {{- end }}
  info:
    {{- if .iocname }}
    - name: iocname
      value: "{{.iocname}}"
    {{- else }}
    - name: iocname
      value: "{{.name | lower}}"
    {{- end}}
    {{- if .iocprefix }}
    - name: iocprefix
      value: "{{ .iocprefix }}"
    {{- end }}
    {{- if .iocroot }}
    - name: iocroot
      value: "{{ .iocroot }}"
    {{- end }}
    {{- if .workdir }}
    - name: workdir
      value: "{{.workdir}}"
    {{- end}}

    {{- if .asset }}
    - name: asset
      value: "{{ .asset }}"
    {{- end }}
    {{- if .info }}
    - name: message
      value: "{{ .info }}"
    {{- end }}
    
    
## END  {{ .name | lower}}
{{- else }}
## not deployed {{ .name | lower }}
{{- end }}

---
{{- end }}